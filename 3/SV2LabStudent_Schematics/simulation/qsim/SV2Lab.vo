// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Intel and sold by Intel or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 17.0.0 Build 595 04/25/2017 SJ Lite Edition"

// DATE "08/17/2020 15:45:35"

// 
// Device: Altera 5CSXFC6D6F31C6 Package FBGA896
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module ramzor_fsm (
	clk,
	resetN,
	switchN,
	endOftime,
	loadN,
	timer_val,
	redLight,
	yellowLight,
	greenLight);
input 	clk;
input 	resetN;
input 	switchN;
input 	endOftime;
output 	loadN;
output 	[7:0] timer_val;
output 	redLight;
output 	yellowLight;
output 	greenLight;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \loadN~output_o ;
wire \timer_val[0]~output_o ;
wire \timer_val[1]~output_o ;
wire \timer_val[2]~output_o ;
wire \timer_val[3]~output_o ;
wire \timer_val[4]~output_o ;
wire \timer_val[5]~output_o ;
wire \timer_val[6]~output_o ;
wire \timer_val[7]~output_o ;
wire \redLight~output_o ;
wire \yellowLight~output_o ;
wire \greenLight~output_o ;
wire \endOftime~input_o ;
wire \switchN~input_o ;
wire \clk~input_o ;
wire \Selector1~0_combout ;
wire \resetN~input_o ;
wire \present_state.red_yellow_st~q ;
wire \Selector5~0_combout ;
wire \present_state.green_st~q ;
wire \present_state.yellow_st~0_combout ;
wire \present_state.yellow_st~q ;
wire \Selector0~0_combout ;
wire \present_state.red_st~q ;
wire \loadN~0_combout ;
wire \Selector7~0_combout ;
wire \redLight~0_combout ;
wire \yellowLight~0_combout ;


cyclonev_io_obuf \loadN~output (
	.i(!\loadN~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\loadN~output_o ),
	.obar());
// synopsys translate_off
defparam \loadN~output .bus_hold = "false";
defparam \loadN~output .open_drain_output = "false";
defparam \loadN~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \timer_val[0]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\timer_val[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \timer_val[0]~output .bus_hold = "false";
defparam \timer_val[0]~output .open_drain_output = "false";
defparam \timer_val[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \timer_val[1]~output (
	.i(\Selector7~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\timer_val[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \timer_val[1]~output .bus_hold = "false";
defparam \timer_val[1]~output .open_drain_output = "false";
defparam \timer_val[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \timer_val[2]~output (
	.i(\Selector5~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\timer_val[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \timer_val[2]~output .bus_hold = "false";
defparam \timer_val[2]~output .open_drain_output = "false";
defparam \timer_val[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \timer_val[3]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\timer_val[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \timer_val[3]~output .bus_hold = "false";
defparam \timer_val[3]~output .open_drain_output = "false";
defparam \timer_val[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \timer_val[4]~output (
	.i(!\Selector5~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\timer_val[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \timer_val[4]~output .bus_hold = "false";
defparam \timer_val[4]~output .open_drain_output = "false";
defparam \timer_val[4]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \timer_val[5]~output (
	.i(!\Selector7~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\timer_val[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \timer_val[5]~output .bus_hold = "false";
defparam \timer_val[5]~output .open_drain_output = "false";
defparam \timer_val[5]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \timer_val[6]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\timer_val[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \timer_val[6]~output .bus_hold = "false";
defparam \timer_val[6]~output .open_drain_output = "false";
defparam \timer_val[6]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \timer_val[7]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\timer_val[7]~output_o ),
	.obar());
// synopsys translate_off
defparam \timer_val[7]~output .bus_hold = "false";
defparam \timer_val[7]~output .open_drain_output = "false";
defparam \timer_val[7]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \redLight~output (
	.i(\redLight~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\redLight~output_o ),
	.obar());
// synopsys translate_off
defparam \redLight~output .bus_hold = "false";
defparam \redLight~output .open_drain_output = "false";
defparam \redLight~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \yellowLight~output (
	.i(\yellowLight~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\yellowLight~output_o ),
	.obar());
// synopsys translate_off
defparam \yellowLight~output .bus_hold = "false";
defparam \yellowLight~output .open_drain_output = "false";
defparam \yellowLight~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \greenLight~output (
	.i(\present_state.green_st~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\greenLight~output_o ),
	.obar());
// synopsys translate_off
defparam \greenLight~output .bus_hold = "false";
defparam \greenLight~output .open_drain_output = "false";
defparam \greenLight~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \endOftime~input (
	.i(endOftime),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\endOftime~input_o ));
// synopsys translate_off
defparam \endOftime~input .bus_hold = "false";
defparam \endOftime~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \switchN~input (
	.i(switchN),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\switchN~input_o ));
// synopsys translate_off
defparam \switchN~input .bus_hold = "false";
defparam \switchN~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \Selector1~0 (
// Equation(s):
// \Selector1~0_combout  = (!\endOftime~input_o  & (((!\switchN~input_o  & !\present_state.red_st~q )) # (\present_state.red_yellow_st~q ))) # (\endOftime~input_o  & (((!\present_state.red_st~q ))))

	.dataa(!\endOftime~input_o ),
	.datab(!\switchN~input_o ),
	.datac(!\present_state.red_st~q ),
	.datad(!\present_state.red_yellow_st~q ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Selector1~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Selector1~0 .extended_lut = "off";
defparam \Selector1~0 .lut_mask = 64'hD0FAD0FAD0FAD0FA;
defparam \Selector1~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \resetN~input (
	.i(resetN),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\resetN~input_o ));
// synopsys translate_off
defparam \resetN~input .bus_hold = "false";
defparam \resetN~input .simulate_z_as = "z";
// synopsys translate_on

dffeas \present_state.red_yellow_st (
	.clk(\clk~input_o ),
	.d(\Selector1~0_combout ),
	.asdata(vcc),
	.clrn(\resetN~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\present_state.red_yellow_st~q ),
	.prn(vcc));
// synopsys translate_off
defparam \present_state.red_yellow_st .is_wysiwyg = "true";
defparam \present_state.red_yellow_st .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Selector5~0 (
// Equation(s):
// \Selector5~0_combout  = (!\endOftime~input_o  & (\present_state.green_st~q )) # (\endOftime~input_o  & ((\present_state.red_yellow_st~q )))

	.dataa(!\endOftime~input_o ),
	.datab(!\present_state.green_st~q ),
	.datac(!\present_state.red_yellow_st~q ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Selector5~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Selector5~0 .extended_lut = "off";
defparam \Selector5~0 .lut_mask = 64'h2727272727272727;
defparam \Selector5~0 .shared_arith = "off";
// synopsys translate_on

dffeas \present_state.green_st (
	.clk(\clk~input_o ),
	.d(\Selector5~0_combout ),
	.asdata(vcc),
	.clrn(\resetN~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\present_state.green_st~q ),
	.prn(vcc));
// synopsys translate_off
defparam \present_state.green_st .is_wysiwyg = "true";
defparam \present_state.green_st .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \present_state.yellow_st~0 (
// Equation(s):
// \present_state.yellow_st~0_combout  = (!\endOftime~input_o  & ((\present_state.yellow_st~q ))) # (\endOftime~input_o  & (\present_state.green_st~q ))

	.dataa(!\endOftime~input_o ),
	.datab(!\present_state.green_st~q ),
	.datac(!\present_state.yellow_st~q ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\present_state.yellow_st~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \present_state.yellow_st~0 .extended_lut = "off";
defparam \present_state.yellow_st~0 .lut_mask = 64'h1B1B1B1B1B1B1B1B;
defparam \present_state.yellow_st~0 .shared_arith = "off";
// synopsys translate_on

dffeas \present_state.yellow_st (
	.clk(\clk~input_o ),
	.d(\present_state.yellow_st~0_combout ),
	.asdata(vcc),
	.clrn(\resetN~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\present_state.yellow_st~q ),
	.prn(vcc));
// synopsys translate_off
defparam \present_state.yellow_st .is_wysiwyg = "true";
defparam \present_state.yellow_st .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \Selector0~0 (
// Equation(s):
// \Selector0~0_combout  = (!\endOftime~input_o  & ((!\switchN~input_o ) # ((\present_state.red_st~q )))) # (\endOftime~input_o  & (((!\present_state.yellow_st~q ))))

	.dataa(!\endOftime~input_o ),
	.datab(!\switchN~input_o ),
	.datac(!\present_state.red_st~q ),
	.datad(!\present_state.yellow_st~q ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Selector0~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Selector0~0 .extended_lut = "off";
defparam \Selector0~0 .lut_mask = 64'hDF8ADF8ADF8ADF8A;
defparam \Selector0~0 .shared_arith = "off";
// synopsys translate_on

dffeas \present_state.red_st (
	.clk(\clk~input_o ),
	.d(\Selector0~0_combout ),
	.asdata(vcc),
	.clrn(\resetN~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\present_state.red_st~q ),
	.prn(vcc));
// synopsys translate_off
defparam \present_state.red_st .is_wysiwyg = "true";
defparam \present_state.red_st .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \loadN~0 (
// Equation(s):
// \loadN~0_combout  = ((!\switchN~input_o  & !\present_state.red_st~q )) # (\endOftime~input_o )

	.dataa(!\endOftime~input_o ),
	.datab(!\switchN~input_o ),
	.datac(!\present_state.red_st~q ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\loadN~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \loadN~0 .extended_lut = "off";
defparam \loadN~0 .lut_mask = 64'hD5D5D5D5D5D5D5D5;
defparam \loadN~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Selector7~0 (
// Equation(s):
// \Selector7~0_combout  = (!\endOftime~input_o  & (!\present_state.green_st~q  & ((!\switchN~input_o ) # (\present_state.red_st~q )))) # (\endOftime~input_o  & (((!\present_state.red_st~q ) # (\present_state.green_st~q ))))

	.dataa(!\endOftime~input_o ),
	.datab(!\switchN~input_o ),
	.datac(!\present_state.red_st~q ),
	.datad(!\present_state.green_st~q ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Selector7~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Selector7~0 .extended_lut = "off";
defparam \Selector7~0 .lut_mask = 64'hDA55DA55DA55DA55;
defparam \Selector7~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \redLight~0 (
// Equation(s):
// \redLight~0_combout  = (!\present_state.red_st~q ) # (\present_state.red_yellow_st~q )

	.dataa(!\present_state.red_st~q ),
	.datab(!\present_state.red_yellow_st~q ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\redLight~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \redLight~0 .extended_lut = "off";
defparam \redLight~0 .lut_mask = 64'hBBBBBBBBBBBBBBBB;
defparam \redLight~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \yellowLight~0 (
// Equation(s):
// \yellowLight~0_combout  = (\present_state.yellow_st~q ) # (\present_state.red_yellow_st~q )

	.dataa(!\present_state.red_yellow_st~q ),
	.datab(!\present_state.yellow_st~q ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\yellowLight~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \yellowLight~0 .extended_lut = "off";
defparam \yellowLight~0 .lut_mask = 64'h7777777777777777;
defparam \yellowLight~0 .shared_arith = "off";
// synopsys translate_on

assign loadN = \loadN~output_o ;

assign timer_val[0] = \timer_val[0]~output_o ;

assign timer_val[1] = \timer_val[1]~output_o ;

assign timer_val[2] = \timer_val[2]~output_o ;

assign timer_val[3] = \timer_val[3]~output_o ;

assign timer_val[4] = \timer_val[4]~output_o ;

assign timer_val[5] = \timer_val[5]~output_o ;

assign timer_val[6] = \timer_val[6]~output_o ;

assign timer_val[7] = \timer_val[7]~output_o ;

assign redLight = \redLight~output_o ;

assign yellowLight = \yellowLight~output_o ;

assign greenLight = \greenLight~output_o ;

endmodule
