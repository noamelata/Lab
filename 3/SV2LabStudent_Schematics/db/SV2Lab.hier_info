|topBomb
duty50 <= one_sec_counter:inst5.duty50
CLOCK_50 => one_sec_counter:inst5.clk
CLOCK_50 => decimal_2_digits_counter:inst6.clk
CLOCK_50 => bomb_fsm:inst.clk
resetN => one_sec_counter:inst5.resetN
resetN => decimal_2_digits_counter:inst6.resetN
resetN => bomb_fsm:inst.resetN
turbo => one_sec_counter:inst5.turbo
tc <= decimal_2_digits_counter:inst6.tc
startN => bomb_fsm:inst.startN
waitN => bomb_fsm:inst.waitN
countEnable <= <GND>
countLoadN <= <GND>
lampDarkN <= bomb_fsm:inst.lampEnable
HEX0[0] <= hexss:inst3.ss[0]
HEX0[1] <= hexss:inst3.ss[1]
HEX0[2] <= hexss:inst3.ss[2]
HEX0[3] <= hexss:inst3.ss[3]
HEX0[4] <= hexss:inst3.ss[4]
HEX0[5] <= hexss:inst3.ss[5]
HEX0[6] <= hexss:inst3.ss[6]
HEX1[0] <= hexss:inst4.ss[0]
HEX1[1] <= hexss:inst4.ss[1]
HEX1[2] <= hexss:inst4.ss[2]
HEX1[3] <= hexss:inst4.ss[3]
HEX1[4] <= hexss:inst4.ss[4]
HEX1[5] <= hexss:inst4.ss[5]
HEX1[6] <= hexss:inst4.ss[6]
ones[0] <= <GND>
ones[1] <= <GND>
ones[2] <= <GND>
ones[3] <= <GND>
tens[0] <= <GND>
tens[1] <= <GND>
tens[2] <= <GND>
tens[3] <= <GND>


|topBomb|one_sec_counter:inst5
clk => oneSecCount[0].CLK
clk => oneSecCount[1].CLK
clk => oneSecCount[2].CLK
clk => oneSecCount[3].CLK
clk => oneSecCount[4].CLK
clk => oneSecCount[5].CLK
clk => oneSecCount[6].CLK
clk => oneSecCount[7].CLK
clk => oneSecCount[8].CLK
clk => oneSecCount[9].CLK
clk => oneSecCount[10].CLK
clk => oneSecCount[11].CLK
clk => oneSecCount[12].CLK
clk => oneSecCount[13].CLK
clk => oneSecCount[14].CLK
clk => oneSecCount[15].CLK
clk => oneSecCount[16].CLK
clk => oneSecCount[17].CLK
clk => oneSecCount[18].CLK
clk => oneSecCount[19].CLK
clk => oneSecCount[20].CLK
clk => oneSecCount[21].CLK
clk => oneSecCount[22].CLK
clk => oneSecCount[23].CLK
clk => oneSecCount[24].CLK
clk => oneSecCount[25].CLK
clk => oneSecCount[26].CLK
clk => oneSecCount[27].CLK
clk => oneSecCount[28].CLK
clk => oneSecCount[29].CLK
clk => oneSecCount[30].CLK
clk => oneSecCount[31].CLK
clk => duty50~reg0.CLK
clk => one_sec~reg0.CLK
resetN => oneSecCount[0].ACLR
resetN => oneSecCount[1].ACLR
resetN => oneSecCount[2].ACLR
resetN => oneSecCount[3].ACLR
resetN => oneSecCount[4].ACLR
resetN => oneSecCount[5].ACLR
resetN => oneSecCount[6].ACLR
resetN => oneSecCount[7].ACLR
resetN => oneSecCount[8].ACLR
resetN => oneSecCount[9].ACLR
resetN => oneSecCount[10].ACLR
resetN => oneSecCount[11].ACLR
resetN => oneSecCount[12].ACLR
resetN => oneSecCount[13].ACLR
resetN => oneSecCount[14].ACLR
resetN => oneSecCount[15].ACLR
resetN => oneSecCount[16].ACLR
resetN => oneSecCount[17].ACLR
resetN => oneSecCount[18].ACLR
resetN => oneSecCount[19].ACLR
resetN => oneSecCount[20].ACLR
resetN => oneSecCount[21].ACLR
resetN => oneSecCount[22].ACLR
resetN => oneSecCount[23].ACLR
resetN => oneSecCount[24].ACLR
resetN => oneSecCount[25].ACLR
resetN => oneSecCount[26].ACLR
resetN => oneSecCount[27].ACLR
resetN => oneSecCount[28].ACLR
resetN => oneSecCount[29].ACLR
resetN => oneSecCount[30].ACLR
resetN => oneSecCount[31].ACLR
resetN => duty50~reg0.ACLR
resetN => one_sec~reg0.ACLR
turbo => LessThan0.IN51
turbo => LessThan0.IN52
turbo => LessThan0.IN53
turbo => LessThan0.IN54
turbo => LessThan0.IN55
turbo => LessThan0.IN56
turbo => LessThan0.IN57
turbo => LessThan0.IN58
turbo => LessThan0.IN59
turbo => LessThan0.IN60
turbo => LessThan0.IN61
turbo => LessThan0.IN62
turbo => LessThan0.IN63
turbo => LessThan0.IN64
one_sec <= one_sec~reg0.DB_MAX_OUTPUT_PORT_TYPE
duty50 <= duty50~reg0.DB_MAX_OUTPUT_PORT_TYPE


|topBomb|decimal_2_digits_counter:inst6
clk => clk.IN2
resetN => resetN.IN2
ena => ena.IN2
ena_cnt => ena_cnt.IN1
loadN => loadN.IN2
Data_init[0] => Data_init[0].IN1
Data_init[1] => Data_init[1].IN1
Data_init[2] => Data_init[2].IN1
Data_init[3] => Data_init[3].IN1
Data_init[4] => Data_init[4].IN1
Data_init[5] => Data_init[5].IN1
Data_init[6] => Data_init[6].IN1
Data_init[7] => Data_init[7].IN1
Count_out[0] <= decimal_down_counter:ones_counter.count
Count_out[1] <= decimal_down_counter:ones_counter.count
Count_out[2] <= decimal_down_counter:ones_counter.count
Count_out[3] <= decimal_down_counter:ones_counter.count
Count_out[4] <= decimal_down_counter:tens_counter.count
Count_out[5] <= decimal_down_counter:tens_counter.count
Count_out[6] <= decimal_down_counter:tens_counter.count
Count_out[7] <= decimal_down_counter:tens_counter.count
tc <= tc.DB_MAX_OUTPUT_PORT_TYPE


|topBomb|decimal_2_digits_counter:inst6|decimal_down_counter:ones_counter
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
resetN => tc.IN1
resetN => count[0]~reg0.ACLR
resetN => count[1]~reg0.ACLR
resetN => count[2]~reg0.ACLR
resetN => count[3]~reg0.ACLR
ena => count.OUTPUTSELECT
ena => count.OUTPUTSELECT
ena => count.OUTPUTSELECT
ena => count.OUTPUTSELECT
ena_cnt => count.OUTPUTSELECT
ena_cnt => count.OUTPUTSELECT
ena_cnt => count.OUTPUTSELECT
ena_cnt => count.OUTPUTSELECT
loadN => count.OUTPUTSELECT
loadN => count.OUTPUTSELECT
loadN => count.OUTPUTSELECT
loadN => count.OUTPUTSELECT
datain[0] => count.DATAB
datain[1] => count.DATAB
datain[2] => count.DATAB
datain[3] => count.DATAB
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tc <= tc.DB_MAX_OUTPUT_PORT_TYPE


|topBomb|decimal_2_digits_counter:inst6|decimal_down_counter:tens_counter
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
resetN => tc.IN1
resetN => count[0]~reg0.ACLR
resetN => count[1]~reg0.ACLR
resetN => count[2]~reg0.ACLR
resetN => count[3]~reg0.ACLR
ena => count.OUTPUTSELECT
ena => count.OUTPUTSELECT
ena => count.OUTPUTSELECT
ena => count.OUTPUTSELECT
ena_cnt => count.OUTPUTSELECT
ena_cnt => count.OUTPUTSELECT
ena_cnt => count.OUTPUTSELECT
ena_cnt => count.OUTPUTSELECT
loadN => count.OUTPUTSELECT
loadN => count.OUTPUTSELECT
loadN => count.OUTPUTSELECT
loadN => count.OUTPUTSELECT
datain[0] => count.DATAB
datain[1] => count.DATAB
datain[2] => count.DATAB
datain[3] => count.DATAB
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tc <= tc.DB_MAX_OUTPUT_PORT_TYPE


|topBomb|bomb_fsm:inst
clk => prState~1.DATAIN
resetN => prState~3.DATAIN
startN => nxtState.OUTPUTSELECT
startN => nxtState.OUTPUTSELECT
startN => nxtState.OUTPUTSELECT
startN => nxtState.OUTPUTSELECT
startN => nxtState.OUTPUTSELECT
startN => nxtState.OUTPUTSELECT
startN => nxtState.OUTPUTSELECT
startN => nxtState.OUTPUTSELECT
startN => nxtState.OUTPUTSELECT
startN => nxtState.OUTPUTSELECT
startN => nxtState.OUTPUTSELECT
startN => nxtState.OUTPUTSELECT
startN => nxtState.OUTPUTSELECT
startN => nxtState.OUTPUTSELECT
waitN => nxtState.OUTPUTSELECT
waitN => nxtState.OUTPUTSELECT
waitN => nxtState.OUTPUTSELECT
waitN => nxtState.OUTPUTSELECT
waitN => nxtState.OUTPUTSELECT
waitN => nxtState.OUTPUTSELECT
waitN => nxtState.OUTPUTSELECT
waitN => nxtState.OUTPUTSELECT
waitN => nxtState.OUTPUTSELECT
waitN => nxtState.OUTPUTSELECT
waitN => nxtState.OUTPUTSELECT
waitN => nxtState.OUTPUTSELECT
waitN => nxtState.OUTPUTSELECT
waitN => nxtState.OUTPUTSELECT
slowClken => nxtState.OUTPUTSELECT
slowClken => nxtState.OUTPUTSELECT
slowClken => nxtState.OUTPUTSELECT
slowClken => nxtState.OUTPUTSELECT
slowClken => nxtState.OUTPUTSELECT
slowClken => nxtState.OUTPUTSELECT
slowClken => nxtState.OUTPUTSELECT
slowClken => nxtState.OUTPUTSELECT
slowClken => nxtState.OUTPUTSELECT
slowClken => nxtState.OUTPUTSELECT
slowClken => nxtState.OUTPUTSELECT
slowClken => nxtState.OUTPUTSELECT
slowClken => nxtState.OUTPUTSELECT
slowClken => nxtState.OUTPUTSELECT
slowClken => nxtState.OUTPUTSELECT
slowClken => nxtState.OUTPUTSELECT
slowClken => nxtState.OUTPUTSELECT
slowClken => nxtState.OUTPUTSELECT
tcSec => nxtState.OUTPUTSELECT
tcSec => nxtState.OUTPUTSELECT
tcSec => nxtState.OUTPUTSELECT
tcSec => nxtState.OUTPUTSELECT
tcSec => nxtState.OUTPUTSELECT
tcSec => nxtState.OUTPUTSELECT
tcSec => nxtState.OUTPUTSELECT
countEnable <= countEnable.DB_MAX_OUTPUT_PORT_TYPE
countLoadN <= countLoadN.DB_MAX_OUTPUT_PORT_TYPE
lampEnable <= lampEnable.DB_MAX_OUTPUT_PORT_TYPE
lampTest <= lampTest.DB_MAX_OUTPUT_PORT_TYPE


|topBomb|LPM_CONSTANT:inst8
result[0] <= <VCC>
result[1] <= <VCC>
result[2] <= <VCC>
result[3] <= <GND>


|topBomb|LPM_CONSTANT:inst9
result[0] <= <VCC>
result[1] <= <GND>
result[2] <= <GND>
result[3] <= <GND>


|topBomb|hexss:inst3
hexin[0] => Decoder0.IN3
hexin[1] => Decoder0.IN2
hexin[2] => Decoder0.IN1
hexin[3] => Decoder0.IN0
darkN => ss.OUTPUTSELECT
darkN => ss.OUTPUTSELECT
darkN => ss.OUTPUTSELECT
darkN => ss.OUTPUTSELECT
darkN => ss.OUTPUTSELECT
darkN => ss.OUTPUTSELECT
darkN => ss.OUTPUTSELECT
LampTest => ss.OUTPUTSELECT
LampTest => ss.OUTPUTSELECT
LampTest => ss.OUTPUTSELECT
LampTest => ss.OUTPUTSELECT
LampTest => ss.OUTPUTSELECT
LampTest => ss.OUTPUTSELECT
LampTest => ss.OUTPUTSELECT
ss[0] <= ss.DB_MAX_OUTPUT_PORT_TYPE
ss[1] <= ss.DB_MAX_OUTPUT_PORT_TYPE
ss[2] <= ss.DB_MAX_OUTPUT_PORT_TYPE
ss[3] <= ss.DB_MAX_OUTPUT_PORT_TYPE
ss[4] <= ss.DB_MAX_OUTPUT_PORT_TYPE
ss[5] <= ss.DB_MAX_OUTPUT_PORT_TYPE
ss[6] <= ss.DB_MAX_OUTPUT_PORT_TYPE


|topBomb|hexss:inst4
hexin[0] => Decoder0.IN3
hexin[1] => Decoder0.IN2
hexin[2] => Decoder0.IN1
hexin[3] => Decoder0.IN0
darkN => ss.OUTPUTSELECT
darkN => ss.OUTPUTSELECT
darkN => ss.OUTPUTSELECT
darkN => ss.OUTPUTSELECT
darkN => ss.OUTPUTSELECT
darkN => ss.OUTPUTSELECT
darkN => ss.OUTPUTSELECT
LampTest => ss.OUTPUTSELECT
LampTest => ss.OUTPUTSELECT
LampTest => ss.OUTPUTSELECT
LampTest => ss.OUTPUTSELECT
LampTest => ss.OUTPUTSELECT
LampTest => ss.OUTPUTSELECT
LampTest => ss.OUTPUTSELECT
ss[0] <= ss.DB_MAX_OUTPUT_PORT_TYPE
ss[1] <= ss.DB_MAX_OUTPUT_PORT_TYPE
ss[2] <= ss.DB_MAX_OUTPUT_PORT_TYPE
ss[3] <= ss.DB_MAX_OUTPUT_PORT_TYPE
ss[4] <= ss.DB_MAX_OUTPUT_PORT_TYPE
ss[5] <= ss.DB_MAX_OUTPUT_PORT_TYPE
ss[6] <= ss.DB_MAX_OUTPUT_PORT_TYPE


