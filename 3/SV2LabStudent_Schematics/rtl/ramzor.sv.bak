 // Alex Grinshpun Sept 2019
 
 // Kobi Dekel Jul 2020 
 // This is an example which shows how to build and use general-purpose timer
 // The timer can be usded for example in a state machine to count different times 
 // needed during the FSM operation. The general-purpose timer ena_cnt is feeded through  
 // Tens of second counter. This allows the timer to count in resolution of Tens of a second 
 // For example load the timer with value 48 means 4.8sec .  
 
 
 module ramzor
	(
	input logic CLOCK_50,
	input logic resetN, 
	input logic switchN,
	input logic turbo, 	
	output logic redLight,
	output logic yellowLight, 
	output logic greenLight
   );

	// Global veriable 
   logic [7:0] timer_val;
	logic onetens_sec;
	logic loadN; 
	
aux_timer aux_timer
(
/*   $$$$$$$   remove to fill 
		.clk(// fill your code here),
		.resetN(// fill your code here), 
		.ena_cnt(// fill your code here),
		.loadN(// fill your code here),
		.data_in(// fill your code herel),
		.tc(// fill your code here)
		*/
);

onetens_sec_counter onetens_sec_counter      	
(
   // Input, Output Ports
	/*   $$$$$$$   remove to fill 
		.clk(// fill your code here), 
		.resetN(// fill your code here), 
		.turbo(// fill your code here),
		.onetens_sec(// fill your code here),
		.duty50()
		*/
);

ramzor_fsm 	#(	 .red_timer (48), 
						 .red_yellow_timer (18),
						 .green_timer (36),
						 .yellow_timer (18)
				  )
ramzor_fsm
(
/*   $$$$$$$   remove to fill 	
		.clk(// fill your code here),
		.resetN(// fill your code here), 
		.switchN(// fill your code here), 
		.endOftime(// fill your code here),
		.loadN(// fill your code here),
		.timer_val(// fill your code herel),
		.redLight(// fill your code here),
		.yellowLight(// fill your code here), 
		.greenLight(// fill your code here)
		
		*/
);


   

endmodule


